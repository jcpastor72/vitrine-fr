@page "/change-password"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Changement de mot de passe - Labor Control</PageTitle>

<div class="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 py-12 px-4">
    <div class="max-w-md w-full">
        <!-- Card principale -->
        <div class="bg-white rounded-2xl shadow-2xl overflow-hidden">
            <!-- Header avec ic√¥ne -->
            <div class="bg-gradient-to-r from-blue-600 to-indigo-600 px-8 py-6">
                <div class="flex items-center justify-center mb-4">
                    <div class="w-20 h-20 bg-white/20 rounded-full flex items-center justify-center">
                        <span class="text-5xl">üîê</span>
                    </div>
                </div>
                <h1 class="text-2xl font-bold text-white text-center">Changement de mot de passe requis</h1>
                <p class="text-blue-100 text-center mt-2">Pour votre s√©curit√©, veuillez d√©finir un nouveau mot de passe</p>
            </div>

            <!-- Contenu -->
            <div class="px-8 py-6">
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="bg-red-50 border-l-4 border-red-500 p-4 rounded-lg mb-6">
                        <p class="text-red-700 text-sm">@errorMessage</p>
                    </div>
                }

                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="bg-green-50 border-l-4 border-green-500 p-4 rounded-lg mb-6">
                        <p class="text-green-700 text-sm">@successMessage</p>
                    </div>
                }

                <form @onsubmit="HandleChangePassword">
                    <!-- Ancien mot de passe -->
                    <div class="mb-6">
                        <label class="block text-sm font-semibold text-gray-700 mb-2">
                            Mot de passe temporaire <span class="text-red-500">*</span>
                        </label>
                        <div class="relative">
                            <input type="@(showOldPassword ? "text" : "password")"
                                   @bind="oldPassword"
                                   required
                                   class="w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                   placeholder="Entrez votre mot de passe temporaire" />
                            <button type="button"
                                    @onclick="() => showOldPassword = !showOldPassword"
                                    class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600">
                                @if (showOldPassword)
                                {
                                    <span>üëÅÔ∏è</span>
                                }
                                else
                                {
                                    <span>üëÅÔ∏è‚Äçüó®Ô∏è</span>
                                }
                            </button>
                        </div>
                    </div>

                    <!-- Nouveau mot de passe -->
                    <div class="mb-6">
                        <label class="block text-sm font-semibold text-gray-700 mb-2">
                            Nouveau mot de passe <span class="text-red-500">*</span>
                        </label>
                        <div class="relative">
                            <input type="@(showNewPassword ? "text" : "password")"
                                   @bind="newPassword"
                                   required
                                   minlength="6"
                                   class="w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                   placeholder="Minimum 6 caract√®res" />
                            <button type="button"
                                    @onclick="() => showNewPassword = !showNewPassword"
                                    class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600">
                                @if (showNewPassword)
                                {
                                    <span>üëÅÔ∏è</span>
                                }
                                else
                                {
                                    <span>üëÅÔ∏è‚Äçüó®Ô∏è</span>
                                }
                            </button>
                        </div>
                        <p class="text-xs text-gray-500 mt-1">
                            Le mot de passe doit contenir au moins 6 caract√®res
                        </p>
                    </div>

                    <!-- Confirmation du nouveau mot de passe -->
                    <div class="mb-6">
                        <label class="block text-sm font-semibold text-gray-700 mb-2">
                            Confirmer le nouveau mot de passe <span class="text-red-500">*</span>
                        </label>
                        <div class="relative">
                            <input type="@(showConfirmPassword ? "text" : "password")"
                                   @bind="confirmPassword"
                                   required
                                   minlength="6"
                                   class="w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                   placeholder="Retapez votre nouveau mot de passe" />
                            <button type="button"
                                    @onclick="() => showConfirmPassword = !showConfirmPassword"
                                    class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600">
                                @if (showConfirmPassword)
                                {
                                    <span>üëÅÔ∏è</span>
                                }
                                else
                                {
                                    <span>üëÅÔ∏è‚Äçüó®Ô∏è</span>
                                }
                            </button>
                        </div>
                    </div>

                    <!-- Bouton de soumission -->
                    <button type="submit"
                            disabled="@isSubmitting"
                            class="w-full bg-gradient-to-r from-blue-600 to-indigo-600 text-white py-3 px-6 rounded-lg font-semibold hover:from-blue-700 hover:to-indigo-700 transition-all duration-300 shadow-lg disabled:opacity-50 disabled:cursor-not-allowed">
                        @if (isSubmitting)
                        {
                            <span>‚è≥ Changement en cours...</span>
                        }
                        else
                        {
                            <span>üîí Changer mon mot de passe</span>
                        }
                    </button>
                </form>
            </div>
        </div>

        <!-- Aide -->
        <div class="mt-6 text-center">
            <p class="text-sm text-gray-600">
                üí° <strong>Astuce:</strong> Choisissez un mot de passe facile √† retenir mais difficile √† deviner
            </p>
        </div>
    </div>
</div>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "userId")]
    public string? UserId { get; set; }

    private string oldPassword = "";
    private string newPassword = "";
    private string confirmPassword = "";
    private bool showOldPassword = false;
    private bool showNewPassword = false;
    private bool showConfirmPassword = false;
    private bool isSubmitting = false;
    private string errorMessage = "";
    private string successMessage = "";

    protected override void OnInitialized()
    {
        // V√©rifier que userId est fourni
        if (string.IsNullOrEmpty(UserId))
        {
            errorMessage = "Erreur: identifiant utilisateur manquant";
        }
    }

    private async Task HandleChangePassword()
    {
        // Reset messages
        errorMessage = "";
        successMessage = "";

        // Validation
        if (string.IsNullOrWhiteSpace(oldPassword))
        {
            errorMessage = "Le mot de passe temporaire est obligatoire";
            return;
        }

        if (string.IsNullOrWhiteSpace(newPassword) || newPassword.Length < 6)
        {
            errorMessage = "Le nouveau mot de passe doit contenir au moins 6 caract√®res";
            return;
        }

        if (newPassword != confirmPassword)
        {
            errorMessage = "Les mots de passe ne correspondent pas";
            return;
        }

        if (newPassword == oldPassword)
        {
            errorMessage = "Le nouveau mot de passe doit √™tre diff√©rent de l'ancien";
            return;
        }

        isSubmitting = true;

        try
        {
            var token = await JS.InvokeAsync<string>("localStorage.getItem", "authToken");

            // Enlever les guillemets si pr√©sents (bug localStorage)
            if (!string.IsNullOrEmpty(token))
            {
                token = token.Trim('"');
            }

            if (string.IsNullOrEmpty(token))
            {
                Navigation.NavigateTo("/login");
                return;
            }

            var request = new ChangePasswordRequest
            {
                UserId = Guid.Parse(UserId!),
                OldPassword = oldPassword,
                NewPassword = newPassword
            };

            // Nettoyer les headers et ajouter l'Authorization
            Http.DefaultRequestHeaders.Clear();
            Http.DefaultRequestHeaders.Add("Authorization", $"Bearer {token}");

            var response = await Http.PostAsJsonAsync("api/auth/change-password", request);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Mot de passe chang√© avec succ√®s ! Redirection...";
                await Task.Delay(2000); // Attendre 2 secondes pour que l'utilisateur lise le message
                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                errorMessage = $"Erreur : {errorContent}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erreur : {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }

    private class ChangePasswordRequest
    {
        public Guid UserId { get; set; }
        public string OldPassword { get; set; } = "";
        public string NewPassword { get; set; } = "";
    }
}
