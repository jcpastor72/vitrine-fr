@page "/admin-lc/suppliers"
@using VitrineFr.Services
@using System.Net.Http.Headers
@inject HttpClient Http
@inject AuthService AuthService
@inject IJSRuntime JS
@inject NavigationManager Navigation

@code {
    public class SupplierResponse
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public string ContactName { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Phone { get; set; } = string.Empty;
        public string Address { get; set; } = string.Empty;
        public string City { get; set; } = string.Empty;
        public string PostalCode { get; set; } = string.Empty;
        public string Country { get; set; } = string.Empty;
        public string? Siret { get; set; }
        public string? VatNumber { get; set; }
        public string? TaxId { get; set; }
        public bool IsEuSupplier { get; set; }
        public string Website { get; set; } = string.Empty;
        public string PaymentTerms { get; set; } = string.Empty;
        public int LeadTimeDays { get; set; }
        public bool IsActive { get; set; }
    }

    private List<SupplierResponse> allSuppliers = new();
    private List<SupplierResponse> filteredSuppliers = new();
    private bool isLoading = true;
    private string selectedStatus = "";
    private string searchTerm = "";
    private bool showDetailModal = false;
    private SupplierResponse? selectedSupplier = null;
    private bool isEditMode = false;

    // Modal création
    private bool showCreateModal = false;
    private string createName = "";
    private string createContact = "";
    private string createEmail = "";
    private string createPhone = "";
    private string createAddress = "";
    private string createCity = "";
    private string createPostalCode = "";
    private string createCountry = "FR";
    private string createSiret = "";
    private string createVatNumber = "";
    private string createTaxId = "";
    private bool createIsEuSupplier = false;
    private string createWebsite = "";
    private string createPaymentTerms = "NET 30";
    private int createLeadTimeDays = 7;

    // Modal erreur
    private bool showErrorModal = false;
    private string errorTitle = "";
    private string errorMessage = "";
    private string errorDetails = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadSuppliers();
    }

    private async Task LoadSuppliers()
    {
        isLoading = true;
        try
        {
            var token = await AuthService.GetTokenAsync();
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
            var response = await Http.GetAsync("api/suppliers");
            if (response.IsSuccessStatusCode)
            {
                allSuppliers = await response.Content.ReadFromJsonAsync<List<SupplierResponse>>() ?? new();
                filteredSuppliers = new List<SupplierResponse>(allSuppliers);
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Erreur: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void FilterSuppliers()
    {
        filteredSuppliers = allSuppliers.Where(s =>
        {
            if (!string.IsNullOrEmpty(selectedStatus))
            {
                bool isActive = selectedStatus == "true";
                if (s.IsActive != isActive) return false;
            }
            if (!string.IsNullOrEmpty(searchTerm))
            {
                var search = searchTerm.ToLower();
                return s.Name.ToLower().Contains(search) || s.Email.ToLower().Contains(search);
            }
            return true;
        }).ToList();
    }

    private void ClearFilters()
    {
        selectedStatus = "";
        searchTerm = "";
        FilterSuppliers();
    }

    private void ViewSupplierDetails(Guid supplierId)
    {
        selectedSupplier = allSuppliers.FirstOrDefault(s => s.Id == supplierId);
        if (selectedSupplier != null)
        {
            showDetailModal = true;
        }
    }

    private void CloseDetailModal()
    {
        showDetailModal = false;
        selectedSupplier = null;
        isEditMode = false;
    }

    private void NavigateToDashboard()
    {
        Navigation.NavigateTo("/admin-lc/dashboard");
    }

    private void OpenCreateModal()
    {
        ResetCreateForm();
        showCreateModal = true;
    }

    private void CloseCreateModal()
    {
        showCreateModal = false;
        ResetCreateForm();
    }

    private void ResetCreateForm()
    {
        createName = "";
        createContact = "";
        createEmail = "";
        createPhone = "";
        createAddress = "";
        createCity = "";
        createPostalCode = "";
        createCountry = "FR";
        createSiret = "";
        createVatNumber = "";
        createTaxId = "";
        createIsEuSupplier = false;
        createWebsite = "";
        createPaymentTerms = "NET 30";
        createLeadTimeDays = 7;
    }

    private async Task CreateSupplier()
    {
        if (string.IsNullOrEmpty(createName))
        {
            ShowErrorModal("Validation", "Le nom du fournisseur est requis");
            return;
        }

        try
        {
            var token = await AuthService.GetTokenAsync();
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

            var request = new
            {
                name = createName,
                contactName = createContact,
                email = createEmail,
                phone = createPhone,
                address = createAddress,
                city = createCity,
                postalCode = createPostalCode,
                country = createCountry,
                siret = string.IsNullOrEmpty(createSiret) ? null : createSiret,
                vatNumber = string.IsNullOrEmpty(createVatNumber) ? null : createVatNumber,
                taxId = string.IsNullOrEmpty(createTaxId) ? null : createTaxId,
                isEuSupplier = createIsEuSupplier,
                website = createWebsite,
                paymentTerms = createPaymentTerms,
                leadTimeDays = createLeadTimeDays,
                isActive = true
            };

            var response = await Http.PostAsJsonAsync("api/suppliers", request);

            if (response.IsSuccessStatusCode)
            {
                await JS.InvokeVoidAsync("showNotification", "Fournisseur créé avec succès");
                CloseCreateModal();
                await LoadSuppliers();
            }
            else
            {
                try
                {
                    var errorResponse = await response.Content.ReadFromJsonAsync<ErrorResponse>();
                    ShowErrorModal("Erreur de création", errorResponse?.message ?? "Erreur inconnue", errorResponse?.details);
                }
                catch
                {
                    var errorText = await response.Content.ReadAsStringAsync();
                    ShowErrorModal("Erreur de création", "Une erreur est survenue lors de la création du fournisseur", errorText);
                }
            }
        }
        catch (Exception ex)
        {
            ShowErrorModal("Erreur", "Une erreur est survenue", ex.Message);
        }
    }

    private void ShowErrorModal(string title, string message, string? details = null)
    {
        errorTitle = title;
        errorMessage = message;
        errorDetails = details ?? "";
        showErrorModal = true;
    }

    private void CloseErrorModal()
    {
        showErrorModal = false;
        errorTitle = "";
        errorMessage = "";
        errorDetails = "";
    }

    private class ErrorResponse
    {
        public string message { get; set; } = "";
        public string? details { get; set; }
    }
}

<div class="min-h-screen bg-gray-50 py-8 px-4">
    <div class="max-w-7xl mx-auto">
        <div class="mb-8">
            <button @onclick="NavigateToDashboard"
                    class="lc-btn lc-btn-secondary inline-flex items-center mb-4">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
                Retour
            </button>

            <div class="flex justify-between items-center flex-wrap gap-4">
                <div>
                    <h1 class="lc-heading-1">Gestion des Fournisseurs</h1>
                    <p class="lc-text-muted mt-1">Gérez vos fournisseurs de puces RFID</p>
                </div>
                <button @onclick="OpenCreateModal"
                        class="lc-btn lc-btn-primary inline-flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                    </svg>
                    Nouveau Fournisseur
                </button>
            </div>
        </div>

        <div class="bg-white rounded-xl shadow-sm p-6 mb-6">
            <div class="grid md:grid-cols-3 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Statut</label>
                    <select @bind="selectedStatus" @bind:after="FilterSuppliers" class="w-full px-4 py-2 border border-gray-300 rounded-lg">
                        <option value="">Tous</option>
                        <option value="true">Actifs</option>
                        <option value="false">Inactifs</option>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Recherche</label>
                    <input type="text" @bind="searchTerm" @bind:after="FilterSuppliers" placeholder="Nom, email..." class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                </div>
                <div class="flex items-end">
                    <button @onclick="ClearFilters" class="w-full px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300">Réinitialiser</button>
                </div>
            </div>
        </div>

        @if (isLoading)
        {
            <div class="flex justify-center items-center py-20">
                <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
            </div>
        }
        else if (filteredSuppliers.Count == 0)
        {
            <div class="bg-white rounded-xl shadow-sm p-12 text-center">
                <p class="text-gray-600">Aucun fournisseur trouvé</p>
            </div>
        }
        else
        {
            <div class="bg-white rounded-xl shadow-sm overflow-hidden">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h2 class="text-lg font-bold text-gray-900">Fournisseurs (@filteredSuppliers.Count)</h2>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Nom</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Contact</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Pays</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Email</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Statut</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            @foreach (var supplier in filteredSuppliers)
                            {
                                <tr class="hover:bg-gray-50 cursor-pointer" @onclick="() => ViewSupplierDetails(supplier.Id)">
                                    <td class="px-6 py-4 whitespace-nowrap"><span class="text-sm font-medium text-gray-900">@supplier.Name</span></td>
                                    <td class="px-6 py-4 whitespace-nowrap"><span class="text-sm text-gray-600">@supplier.ContactName</span></td>
                                    <td class="px-6 py-4 whitespace-nowrap"><span class="text-sm text-gray-600">@supplier.Country</span></td>
                                    <td class="px-6 py-4 whitespace-nowrap"><span class="text-sm text-gray-600">@supplier.Email</span></td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        @if (supplier.IsActive)
                                        {
                                            <span class="px-3 py-1 inline-flex text-xs font-semibold rounded-full bg-green-100 text-green-800">Actif</span>
                                        }
                                        else
                                        {
                                            <span class="px-3 py-1 inline-flex text-xs font-semibold rounded-full bg-gray-100 text-gray-800">Inactif</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal Détail -->
@if (showDetailModal && selectedSupplier != null)
{
    <div class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4" @onclick="CloseDetailModal">
        <div class="bg-white rounded-xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto" @onclick:stopPropagation>
            <div class="bg-blue-50 border-b border-blue-200 p-6">
                <div class="flex items-start justify-between">
                    <div>
                        <h3 class="text-2xl font-bold text-gray-900">Détail Fournisseur</h3>
                        <p class="text-sm text-gray-600 mt-1">@selectedSupplier.Name</p>
                    </div>
                    <button @onclick="CloseDetailModal" class="text-gray-400 hover:text-gray-600">
                        <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
            <div class="p-6">
                <div class="space-y-4">
                    <div class="grid md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Nom</label>
                            <p class="text-lg text-gray-900">@selectedSupplier.Name</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Contact</label>
                            <p class="text-lg text-gray-900">@selectedSupplier.ContactName</p>
                        </div>
                    </div>
                    <div class="grid md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                            <p class="text-lg text-gray-900">@selectedSupplier.Email</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Téléphone</label>
                            <p class="text-lg text-gray-900">@selectedSupplier.Phone</p>
                        </div>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Adresse</label>
                        <p class="text-lg text-gray-900">@selectedSupplier.Address</p>
                    </div>
                    <div class="grid md:grid-cols-3 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Ville</label>
                            <p class="text-lg text-gray-900">@selectedSupplier.City</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Code Postal</label>
                            <p class="text-lg text-gray-900">@selectedSupplier.PostalCode</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Pays</label>
                            <p class="text-lg text-gray-900">@selectedSupplier.Country</p>
                        </div>
                    </div>
                    <div class="grid md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">SIRET</label>
                            <p class="text-lg text-gray-900">@(selectedSupplier.Siret ?? "-")</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">TVA</label>
                            <p class="text-lg text-gray-900">@(selectedSupplier.VatNumber ?? "-")</p>
                        </div>
                    </div>
                    <div class="grid md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">TaxId</label>
                            <p class="text-lg text-gray-900">@(selectedSupplier.TaxId ?? "-")</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Fournisseur UE</label>
                            <p class="text-lg text-gray-900">@(selectedSupplier.IsEuSupplier ? "Oui" : "Non")</p>
                        </div>
                    </div>
                    <div class="grid md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Conditions Paiement</label>
                            <p class="text-lg text-gray-900">@selectedSupplier.PaymentTerms</p>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Délai Livraison</label>
                            <p class="text-lg text-gray-900">@selectedSupplier.LeadTimeDays jours</p>
                        </div>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Site Web</label>
                        <p class="text-lg text-blue-600"><a href="@selectedSupplier.Website" target="_blank">@selectedSupplier.Website</a></p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Statut</label>
                        @if (selectedSupplier.IsActive)
                        {
                            <span class="px-3 py-1 inline-flex text-xs font-semibold rounded-full bg-green-100 text-green-800">Actif</span>
                        }
                        else
                        {
                            <span class="px-3 py-1 inline-flex text-xs font-semibold rounded-full bg-gray-100 text-gray-800">Inactif</span>
                        }
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 border-t border-gray-200 p-6 flex justify-end gap-3">
                <button @onclick="CloseDetailModal" class="px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300">Fermer</button>
            </div>
        </div>
    </div>
}

<!-- Modal Erreur -->
@if (showErrorModal)
{
    <div class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4" @onclick="CloseErrorModal">
        <div class="bg-white rounded-xl shadow-2xl max-w-md w-full" @onclick:stopPropagation>
            <div class="bg-red-50 border-b border-red-200 p-6">
                <div class="flex items-start justify-between">
                    <div class="flex items-start gap-3">
                        <svg class="w-6 h-6 text-red-600 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4v.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <div>
                            <h3 class="text-lg font-bold text-red-900">@errorTitle</h3>
                        </div>
                    </div>
                    <button @onclick="CloseErrorModal" class="text-red-400 hover:text-red-600">
                        <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
            <div class="p-6">
                <p class="text-gray-900 font-medium mb-2">@errorMessage</p>
                @if (!string.IsNullOrEmpty(errorDetails))
                {
                    <div class="mt-4 p-3 bg-gray-50 rounded-lg border border-gray-200">
                        <p class="text-sm text-gray-600 font-mono break-words">@errorDetails</p>
                    </div>
                }
            </div>
            <div class="bg-gray-50 border-t border-gray-200 p-6 flex justify-end">
                <button @onclick="CloseErrorModal" class="px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition">
                    Fermer
                </button>
            </div>
        </div>
    </div>
}

<!-- Modal Création Fournisseur -->
@if (showCreateModal)
{
    <div class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4" @onclick="CloseCreateModal">
        <div class="bg-white rounded-xl shadow-2xl max-w-3xl w-full max-h-[90vh] overflow-y-auto" @onclick:stopPropagation>
            <div class="bg-green-50 border-b border-green-200 p-6">
                <div class="flex items-start justify-between">
                    <div>
                        <h3 class="text-2xl font-bold text-gray-900">Nouveau Fournisseur</h3>
                        <p class="text-sm text-gray-600 mt-1">Créez un nouveau fournisseur</p>
                    </div>
                    <button @onclick="CloseCreateModal" class="text-gray-400 hover:text-gray-600">
                        <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
            <div class="p-6">
                <div class="space-y-4">
                    <div class="grid md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Nom *</label>
                            <input type="text" @bind="createName" placeholder="Nom du fournisseur" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Contact</label>
                            <input type="text" @bind="createContact" placeholder="Nom du contact" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                    </div>
                    <div class="grid md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                            <input type="email" @bind="createEmail" placeholder="email@example.com" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Téléphone</label>
                            <input type="tel" @bind="createPhone" placeholder="+33..." class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Adresse</label>
                        <input type="text" @bind="createAddress" placeholder="Adresse" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                    </div>
                    <div class="grid md:grid-cols-3 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Ville</label>
                            <input type="text" @bind="createCity" placeholder="Ville" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Code Postal</label>
                            <input type="text" @bind="createPostalCode" placeholder="Code postal" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Pays</label>
                            <select @bind="createCountry" class="w-full px-4 py-2 border border-gray-300 rounded-lg">
                                <option value="FR">France</option>
                                <option value="DE">Allemagne</option>
                                <option value="IT">Italie</option>
                                <option value="ES">Espagne</option>
                                <option value="BE">Belgique</option>
                                <option value="NL">Pays-Bas</option>
                                <option value="CH">Suisse</option>
                                <option value="GB">Royaume-Uni</option>
                                <option value="US">États-Unis</option>
                                <option value="CN">Chine</option>
                                <option value="OTHER">Autre</option>
                            </select>
                        </div>
                    </div>
                    <div class="grid md:grid-cols-3 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">SIRET</label>
                            <input type="text" @bind="createSiret" placeholder="SIRET (FR)" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">TVA</label>
                            <input type="text" @bind="createVatNumber" placeholder="Numéro TVA" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">TaxId</label>
                            <input type="text" @bind="createTaxId" placeholder="Tax ID" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                    </div>
                    <div class="grid md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Site Web</label>
                            <input type="url" @bind="createWebsite" placeholder="https://..." class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Conditions Paiement</label>
                            <input type="text" @bind="createPaymentTerms" placeholder="NET 30" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                        </div>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Délai Livraison (jours)</label>
                        <input type="number" @bind="createLeadTimeDays" min="1" class="w-full px-4 py-2 border border-gray-300 rounded-lg" />
                    </div>
                    <div>
                        <label class="flex items-center">
                            <input type="checkbox" @bind="createIsEuSupplier" class="rounded border-gray-300" />
                            <span class="ml-2 text-sm text-gray-700">Fournisseur UE</span>
                        </label>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 border-t border-gray-200 p-6 flex justify-end gap-3">
                <button @onclick="CloseCreateModal" class="px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300">Annuler</button>
                <button @onclick="CreateSupplier" class="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700">Créer</button>
            </div>
        </div>
    </div>
}
