@page "/admin-lc/clients"
@layout AdminLayout
@using LaborControl.Web.Models
@using LaborControl.Web.Services
@inject NavigationManager Navigation
@inject ApiService ApiService

<div class="space-y-6">
    <!-- Header -->
    <div class="flex justify-between items-center">
        <div>
            <h1 class="text-3xl font-bold text-gray-900">Gestion des Clients</h1>
            <p class="text-gray-600 mt-2">Consultez et g√©rez toutes les fiches clients</p>
        </div>
        <button @onclick="CreateNewClient" class="px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition font-medium">
            ‚ûï Nouveau client
        </button>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="bg-red-50 rounded-lg shadow p-4 border-l-4 border-red-600">
            <p class="text-red-800 font-medium">‚ö†Ô∏è Erreur</p>
            <p class="text-red-700 text-sm mt-1">@errorMessage</p>
        </div>
    }

    <!-- Statistics -->
    <div class="grid md:grid-cols-4 gap-4">
        <div class="bg-white rounded-lg shadow p-4">
            <div class="text-2xl font-bold text-gray-900">@(clients?.Count ?? 0)</div>
            <div class="text-sm text-gray-600">Clients totaux</div>
        </div>
        <div class="bg-blue-50 rounded-lg shadow p-4">
            <div class="text-2xl font-bold text-blue-700">@starterCount</div>
            <div class="text-sm text-blue-600">Plan Starter</div>
        </div>
        <div class="bg-purple-50 rounded-lg shadow p-4">
            <div class="text-2xl font-bold text-purple-700">@professionalCount</div>
            <div class="text-sm text-purple-600">Plan Pro</div>
        </div>
        <div class="bg-green-50 rounded-lg shadow p-4">
            <div class="text-2xl font-bold text-green-700">@enterpriseCount</div>
            <div class="text-sm text-green-600">Plan Enterprise</div>
        </div>
    </div>

    <!-- Loading State -->
    @if (isLoading)
    {
        <div class="bg-white rounded-lg shadow p-8 text-center">
            <div class="inline-block">
                <div class="w-12 h-12 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin"></div>
            </div>
            <p class="text-gray-600 mt-4 font-medium">Chargement des clients...</p>
        </div>
    }
    else if (clients == null || !clients.Any())
    {
        <div class="bg-white rounded-lg shadow p-8 text-center">
            <p class="text-2xl mb-2">üë•</p>
            <p class="text-gray-600 font-medium">Aucun client trouv√©</p>
            <p class="text-gray-500 text-sm mt-2">Commencez √† cr√©er des clients pour les g√©rer ici.</p>
            <button @onclick="CreateNewClient" class="mt-4 px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition font-medium">
                Cr√©er le premier client
            </button>
        </div>
    }
    else
    {
        <!-- Clients Table -->
        <div class="bg-white rounded-lg shadow overflow-hidden">
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead class="bg-gray-50 border-b-2 border-gray-200">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Nom</th>
                            <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Contact</th>
                            <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Plan</th>
                            <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Statut</th>
                            <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Date cr√©ation</th>
                            <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200">
                        @foreach (var client in clients)
                        {
                            <tr class="hover:bg-gray-50 transition cursor-pointer" @onclick="() => ViewClientDetails(client.Id)">
                                <td class="px-6 py-4 font-bold text-gray-900">@client.Name</td>
                                <td class="px-6 py-4 text-sm text-gray-600">contact@example.com</td>
                                <td class="px-6 py-4">
                                    @{
                                        var planColor = client.SubscriptionPlan switch
                                        {
                                            "Starter" => "bg-blue-100 text-blue-800",
                                            "Professional" => "bg-purple-100 text-purple-800",
                                            "Enterprise" => "bg-green-100 text-green-800",
                                            _ => "bg-gray-100 text-gray-800"
                                        };
                                    }
                                    <span class="inline-flex px-3 py-1 rounded-full text-xs font-semibold @planColor">
                                        @client.SubscriptionPlan
                                    </span>
                                </td>
                                <td class="px-6 py-4">
                                    @if (client.IsArchived)
                                    {
                                        <span class="inline-flex px-3 py-1 rounded-full text-xs font-semibold bg-gray-100 text-gray-800">
                                            üì¶ Archiv√©
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="inline-flex px-3 py-1 rounded-full text-xs font-semibold bg-green-100 text-green-800">
                                            ‚úì Actif
                                        </span>
                                    }
                                </td>
                                <td class="px-6 py-4 text-sm text-gray-600">@client.CreatedAt.ToString("dd/MM/yyyy")</td>
                                <td class="px-6 py-4 text-sm space-x-2" @onclick:stopPropagation>
                                    <button @onclick="() => EditClient(client.Id)" class="px-3 py-1 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition font-medium">
                                        ‚úèÔ∏è √âditer
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

@code {
    private List<Client>? clients;
    private bool isLoading = true;
    private string errorMessage = string.Empty;
    private int starterCount = 5;
    private int professionalCount = 8;
    private int enterpriseCount = 3;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var allClients = await ApiService.GetClientsAsync();
            // Filtrer les clients non archiv√©s par d√©faut
            clients = allClients?.Where(c => !c.IsArchived).ToList();
        }
        catch (Exception ex)
        {
            errorMessage = $"Erreur de chargement: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void CreateNewClient()
    {
        Navigation.NavigateTo("/admin-lc/clients/new");
    }

    private void EditClient(Guid clientId)
    {
        Navigation.NavigateTo($"/admin-lc/clients/{clientId}/edit");
    }

    private void ViewClientDetails(Guid clientId)
    {
        Navigation.NavigateTo($"/admin-lc/clients/{clientId}");
    }
}
