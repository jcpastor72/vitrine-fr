@page "/admin-lc/clients/{ClientId:guid}"
@layout AdminLayout
@using LaborControl.Web.Models
@using LaborControl.Web.Services
@inject NavigationManager Navigation
@inject ApiService ApiService

<div class="space-y-6">
    <!-- Header with Back Button -->
    <div class="flex items-center justify-between">
        <button @onclick="GoBack" class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition font-medium">
            ‚Üê Retour
        </button>
        <h1 class="text-3xl font-bold text-gray-900">D√©tail du Client</h1>
        <div></div>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="bg-red-50 rounded-lg shadow p-4 border-l-4 border-red-600">
            <p class="text-red-800 font-medium">‚ö†Ô∏è Erreur</p>
            <p class="text-red-700 text-sm mt-1">@errorMessage</p>
        </div>
    }

    @if (client == null)
    {
        if (isLoading)
        {
            <div class="bg-white rounded-lg shadow p-8 text-center">
                <div class="inline-block">
                    <div class="w-12 h-12 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin"></div>
                </div>
                <p class="text-gray-600 mt-4 font-medium">Chargement du client...</p>
            </div>
        }
        else
        {
            <div class="bg-white rounded-lg shadow p-8 text-center">
                <p class="text-gray-600 font-medium">Client non trouv√©</p>
            </div>
        }
    }
    else
    {
        <!-- Client Information Header -->
        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex justify-between items-start mb-6">
                <div>
                    <h2 class="text-3xl font-bold text-gray-900">@client.Name</h2>
                    <div class="flex gap-3 mt-3">
                        @{
                            var planColor = client.SubscriptionPlan switch
                            {
                                "Starter" => "bg-blue-100 text-blue-800",
                                "Professional" => "bg-purple-100 text-purple-800",
                                "Enterprise" => "bg-green-100 text-green-800",
                                _ => "bg-gray-100 text-gray-800"
                            };
                        }
                        <span class="inline-flex px-3 py-1 rounded-full text-sm font-semibold @planColor">
                            üì¶ @client.SubscriptionPlan
                        </span>
                        @if (client.IsArchived)
                        {
                            <span class="inline-flex px-3 py-1 rounded-full text-sm font-semibold bg-gray-100 text-gray-800">
                                üì¶ Archiv√©
                            </span>
                        }
                        else
                        {
                            <span class="inline-flex px-3 py-1 rounded-full text-sm font-semibold bg-green-100 text-green-800">
                                ‚úì Actif
                            </span>
                        }
                    </div>
                </div>
                <div class="text-right">
                    <p class="text-sm text-gray-600">Cr√©√© le</p>
                    <p class="text-lg font-bold text-gray-900">@client.CreatedAt.ToString("dd/MM/yyyy")</p>
                </div>
            </div>

            <!-- Key Info Grid -->
            <div class="grid md:grid-cols-4 gap-4">
                <div class="border-l-4 border-blue-500 pl-4">
                    <p class="text-xs text-gray-600 font-semibold uppercase">Ville</p>
                    <p class="text-lg font-bold text-gray-900 mt-1">@(string.IsNullOrEmpty(client.City) ? "‚Äî" : client.City)</p>
                </div>
                <div class="border-l-4 border-purple-500 pl-4">
                    <p class="text-xs text-gray-600 font-semibold uppercase">Activit√© (APE)</p>
                    <p class="text-lg font-bold text-gray-900 mt-1">@(string.IsNullOrEmpty(client.BusinessSector) ? "‚Äî" : client.BusinessSector)</p>
                </div>
                <div class="border-l-4 border-green-500 pl-4">
                    <p class="text-xs text-gray-600 font-semibold uppercase">Sites</p>
                    <p class="text-lg font-bold text-gray-900 mt-1">@(client.Sites?.Count ?? 0)</p>
                </div>
                <div class="border-l-4 border-orange-500 pl-4">
                    <p class="text-xs text-gray-600 font-semibold uppercase">Utilisateurs</p>
                    <p class="text-lg font-bold text-gray-900 mt-1">@(client.Users?.Count ?? 0)</p>
                </div>
            </div>
        </div>

        <!-- Tabs Navigation -->
        <div class="bg-white rounded-lg shadow">
            <div class="border-b border-gray-200 flex">
                <button @onclick='() => activeTab = "general"'
                    class="px-6 py-4 font-medium transition @(activeTab == "general" ? "text-blue-600 border-b-2 border-blue-600" : "text-gray-600 hover:text-gray-900")">
                    G√©n√©ral
                </button>
                <button @onclick='() => activeTab = "sites"'
                    class="px-6 py-4 font-medium transition @(activeTab == "sites" ? "text-blue-600 border-b-2 border-blue-600" : "text-gray-600 hover:text-gray-900")">
                    Sites (@(client.Sites?.Count ?? 0))
                </button>
                <button @onclick='() => activeTab = "assets"'
                    class="px-6 py-4 font-medium transition @(activeTab == "assets" ? "text-blue-600 border-b-2 border-blue-600" : "text-gray-600 hover:text-gray-900")">
                    Actifs (@(client.Assets?.Count ?? 0))
                </button>
                <button @onclick='() => activeTab = "rfid"'
                    class="px-6 py-4 font-medium transition @(activeTab == "rfid" ? "text-blue-600 border-b-2 border-blue-600" : "text-gray-600 hover:text-gray-900")">
                    Puces (@(client.RfidChips?.Count ?? 0))
                </button>
                <button @onclick='() => activeTab = "users"'
                    class="px-6 py-4 font-medium transition @(activeTab == "users" ? "text-blue-600 border-b-2 border-blue-600" : "text-gray-600 hover:text-gray-900")">
                    Utilisateurs (@(client.Users?.Count ?? 0))
                </button>
                <button @onclick='() => activeTab = "orders"'
                    class="px-6 py-4 font-medium transition @(activeTab == "orders" ? "text-blue-600 border-b-2 border-blue-600" : "text-gray-600 hover:text-gray-900")">
                    Commandes (@(client.Orders?.Count ?? 0))
                </button>
            </div>

            <div class="p-6">
                <!-- General Tab -->
                @if (activeTab == "general")
                {
                    <div class="space-y-6">
                        <div class="grid md:grid-cols-2 gap-6">
                            <div>
                                <label class="text-sm text-gray-600 font-semibold">Nom du client</label>
                                <p class="text-lg font-medium text-gray-900 mt-1">@client.Name</p>
                            </div>
                            <div>
                                <label class="text-sm text-gray-600 font-semibold">Plan d'abonnement</label>
                                <p class="text-lg font-medium text-gray-900 mt-1">@client.SubscriptionPlan</p>
                            </div>
                            <div>
                                <label class="text-sm text-gray-600 font-semibold">Ville</label>
                                <p class="text-lg font-medium text-gray-900 mt-1">@(string.IsNullOrEmpty(client.City) ? "‚Äî" : client.City)</p>
                            </div>
                            <div>
                                <label class="text-sm text-gray-600 font-semibold">Activit√© (APE)</label>
                                <p class="text-lg font-medium text-gray-900 mt-1">@(string.IsNullOrEmpty(client.BusinessSector) ? "‚Äî" : client.BusinessSector)</p>
                            </div>
                            <div>
                                <label class="text-sm text-gray-600 font-semibold">Date de cr√©ation</label>
                                <p class="text-lg font-medium text-gray-900 mt-1">@client.CreatedAt.ToString("dd/MM/yyyy √† HH:mm")</p>
                            </div>
                            <div>
                                <label class="text-sm text-gray-600 font-semibold">Statut</label>
                                <div class="mt-1">
                                    @if (client.IsArchived)
                                    {
                                        <span class="inline-flex px-3 py-1 rounded-full text-sm font-semibold bg-gray-100 text-gray-800">
                                            üì¶ Archiv√©
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="inline-flex px-3 py-1 rounded-full text-sm font-semibold bg-green-100 text-green-800">
                                            ‚úì Actif
                                        </span>
                                    }
                                </div>
                            </div>

                            @if (client.IsArchived && client.ArchivedAt.HasValue)
                            {
                                <div>
                                    <label class="text-sm text-gray-600 font-semibold">Date d'archivage</label>
                                    <p class="text-lg font-medium text-gray-900 mt-1">@client.ArchivedAt.Value.ToString("dd/MM/yyyy √† HH:mm")</p>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(client.ArchivalReason))
                            {
                                <div class="md:col-span-2">
                                    <label class="text-sm text-gray-600 font-semibold">Motif d'archivage</label>
                                    <p class="text-lg font-medium text-gray-900 mt-1">@client.ArchivalReason</p>
                                </div>
                            }
                        </div>
                    </div>
                }

                <!-- Sites Tab -->
                @if (activeTab == "sites")
                {
                    @if (client.Sites == null || client.Sites.Count == 0)
                    {
                        <div class="text-center py-12">
                            <p class="text-gray-600 text-lg">Aucun site enregistr√©</p>
                        </div>
                    }
                    else
                    {
                        <div class="space-y-4">
                            @foreach (var site in client.Sites)
                            {
                                <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition">
                                    <div class="flex justify-between items-start">
                                        <div>
                                            <h3 class="text-lg font-bold text-gray-900">@site.Name</h3>
                                            @if (!string.IsNullOrEmpty(site.Code))
                                            {
                                                <p class="text-sm text-gray-600 mt-1">Code: <strong>@site.Code</strong></p>
                                            }
                                            @if (!string.IsNullOrEmpty(site.Type))
                                            {
                                                <p class="text-sm text-gray-600">Type: @site.Type</p>
                                            }
                                            @if (!string.IsNullOrEmpty(site.Description))
                                            {
                                                <p class="text-sm text-gray-600 mt-2">@site.Description</p>
                                            }
                                        </div>
                                        <div class="text-right">
                                            <span class="inline-flex px-2 py-1 rounded text-xs font-semibold @(site.IsActive ? "bg-green-100 text-green-800" : "bg-gray-100 text-gray-800")">
                                                @(site.IsActive ? "‚úì Actif" : "Inactif")
                                            </span>
                                        </div>
                                    </div>
                                    <div class="grid grid-cols-3 gap-4 mt-4 pt-4 border-t border-gray-200">
                                        <div>
                                            <p class="text-xs text-gray-600 uppercase font-semibold">Zones</p>
                                            <p class="text-lg font-bold text-gray-900 mt-1">@site.Level</p>
                                        </div>
                                        <div>
                                            <p class="text-xs text-gray-600 uppercase font-semibold">Actifs</p>
                                            <p class="text-lg font-bold text-gray-900 mt-1">@site.AssetsCount</p>
                                        </div>
                                        <div>
                                            <p class="text-xs text-gray-600 uppercase font-semibold">Points</p>
                                            <p class="text-lg font-bold text-gray-900 mt-1">@site.ControlPointsCount</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }

                <!-- Assets Tab -->
                @if (activeTab == "assets")
                {
                    @if (client.Assets == null || client.Assets.Count == 0)
                    {
                        <div class="text-center py-12">
                            <p class="text-gray-600 text-lg">Aucun actif enregistr√©</p>
                        </div>
                    }
                    else
                    {
                        <div class="overflow-x-auto">
                            <table class="w-full">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Nom</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Type</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Cat√©gorie</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Mod√®le</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Statut</th>
                                    </tr>
                                </thead>
                                <tbody class="divide-y divide-gray-200">
                                    @foreach (var asset in client.Assets)
                                    {
                                        <tr class="hover:bg-gray-50">
                                            <td class="px-6 py-4 font-medium text-gray-900">@asset.Name</td>
                                            <td class="px-6 py-4 text-sm text-gray-600">@asset.Type</td>
                                            <td class="px-6 py-4 text-sm text-gray-600">@(asset.Category ?? "‚Äî")</td>
                                            <td class="px-6 py-4 text-sm text-gray-600">@(asset.Model ?? "‚Äî")</td>
                                            <td class="px-6 py-4">
                                                <span class="inline-flex px-2 py-1 rounded text-xs font-semibold @(asset.IsActive ? "bg-green-100 text-green-800" : "bg-gray-100 text-gray-800")">
                                                    @(asset.IsActive ? "‚úì Actif" : "Inactif")
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                }

                <!-- RFID Chips Tab -->
                @if (activeTab == "rfid")
                {
                    @if (client.RfidChips == null || client.RfidChips.Count == 0)
                    {
                        <div class="text-center py-12">
                            <p class="text-gray-600 text-lg">Aucune puce RFID enregistr√©e</p>
                        </div>
                    }
                    else
                    {
                        <div class="grid md:grid-cols-2 gap-4">
                            @foreach (var chip in client.RfidChips)
                            {
                                <div class="border border-gray-200 rounded-lg p-4 bg-gray-50">
                                    <p class="text-sm text-gray-600 font-semibold">UID</p>
                                    <p class="text-lg font-mono font-bold text-gray-900 break-all">@chip.Uid</p>
                                    @if (!string.IsNullOrEmpty(chip.Label))
                                    {
                                        <p class="text-sm text-gray-600 font-semibold mt-2">√âtiquette</p>
                                        <p class="text-gray-900 mt-1">@chip.Label</p>
                                    }
                                    <p class="text-xs text-gray-600 mt-3">
                                        @if (chip.IsActive)
                                        {
                                            <span class="inline-flex px-2 py-1 rounded bg-green-100 text-green-800 font-semibold">
                                                ‚úì Active
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="inline-flex px-2 py-1 rounded bg-gray-100 text-gray-800 font-semibold">
                                                Inactive
                                            </span>
                                        }
                                    </p>
                                </div>
                            }
                        </div>
                    }
                }

                <!-- Users Tab -->
                @if (activeTab == "users")
                {
                    @if (client.Users == null || client.Users.Count == 0)
                    {
                        <div class="text-center py-12">
                            <p class="text-gray-600 text-lg">Aucun utilisateur enregistr√©</p>
                        </div>
                    }
                    else
                    {
                        <div class="overflow-x-auto">
                            <table class="w-full">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Nom</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Email</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">R√¥le</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Date cr√©ation</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Statut</th>
                                    </tr>
                                </thead>
                                <tbody class="divide-y divide-gray-200">
                                    @foreach (var user in client.Users)
                                    {
                                        <tr class="hover:bg-gray-50">
                                            <td class="px-6 py-4 font-medium text-gray-900">@user.Name</td>
                                            <td class="px-6 py-4 text-sm text-gray-600">@user.Email</td>
                                            <td class="px-6 py-4 text-sm">
                                                <span class="inline-flex px-2 py-1 rounded text-xs font-semibold bg-blue-100 text-blue-800">
                                                    @user.Role
                                                </span>
                                            </td>
                                            <td class="px-6 py-4 text-sm text-gray-600">@user.CreatedAt.ToString("dd/MM/yyyy")</td>
                                            <td class="px-6 py-4">
                                                <span class="inline-flex px-2 py-1 rounded text-xs font-semibold @(user.IsActive ? "bg-green-100 text-green-800" : "bg-gray-100 text-gray-800")">
                                                    @(user.IsActive ? "‚úì Actif" : "Inactif")
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                }

                <!-- Orders Tab -->
                @if (activeTab == "orders")
                {
                    @if (client.Orders == null || client.Orders.Count == 0)
                    {
                        <div class="text-center py-12">
                            <p class="text-gray-600 text-lg">Aucune commande enregistr√©e</p>
                        </div>
                    }
                    else
                    {
                        <div class="overflow-x-auto">
                            <table class="w-full">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">N¬∞ Commande</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Date</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Montant</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Statut</th>
                                        <th class="px-6 py-3 text-left text-xs font-semibold text-gray-700">Livraison</th>
                                    </tr>
                                </thead>
                                <tbody class="divide-y divide-gray-200">
                                    @foreach (var order in client.Orders)
                                    {
                                        <tr class="hover:bg-gray-50">
                                            <td class="px-6 py-4 font-mono font-semibold text-blue-600">@order.OrderNumber</td>
                                            <td class="px-6 py-4 text-sm text-gray-600">@order.CreatedAt.ToString("dd/MM/yyyy")</td>
                                            <td class="px-6 py-4 font-bold text-gray-900">@order.Amount.ToString("0.00 ‚Ç¨")</td>
                                            <td class="px-6 py-4">
                                                @{
                                                    var statusColor = order.Status switch
                                                    {
                                                        "Compl√©t√©e" => "bg-green-100 text-green-800",
                                                        "En traitement" => "bg-blue-100 text-blue-800",
                                                        "En attente" => "bg-yellow-100 text-yellow-800",
                                                        "Annul√©e" => "bg-red-100 text-red-800",
                                                        _ => "bg-gray-100 text-gray-800"
                                                    };
                                                }
                                                <span class="inline-flex px-2 py-1 rounded text-xs font-semibold @statusColor">
                                                    @order.Status
                                                </span>
                                            </td>
                                            <td class="px-6 py-4 text-sm text-gray-600">
                                                @if (order.DeliveryDate.HasValue)
                                                {
                                                    <span>@order.DeliveryDate.Value.ToString("dd/MM/yyyy")</span>
                                                }
                                                else
                                                {
                                                    <span>‚Äî</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Actions -->
        <div class="bg-white rounded-lg shadow p-6">
            <h2 class="text-2xl font-bold text-gray-900 mb-6">Actions</h2>
            <div class="flex flex-wrap gap-3">
                <button @onclick="EditClient" class="px-6 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 transition font-medium">
                    ‚úèÔ∏è Modifier
                </button>
                @if (!client.IsArchived)
                {
                    <button @onclick="ShowDeleteConfirmation" class="px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition font-medium">
                        üóëÔ∏è Archiver
                    </button>
                }
                else
                {
                    <button @onclick="RestoreClient" class="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition font-medium">
                        ‚Ü©Ô∏è Restaurer
                    </button>
                }
            </div>
        </div>
    }
</div>

<!-- Modal de confirmation d'archivage -->
@if (showDeleteModal)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-lg shadow-lg p-6 w-96 max-h-96 overflow-y-auto">
            <h2 class="text-2xl font-bold text-gray-900 mb-4">‚ö†Ô∏è Confirmer l'archivage</h2>

            <p class="text-gray-600 mb-6">
                Vous √™tes sur le point d'archiver le client <strong>@client?.Name</strong>.
                Cette action ne le supprimera pas, mais le marquera comme archiv√©.
            </p>

            <div class="mb-6">
                <label class="block text-sm font-semibold text-gray-700 mb-2">
                    Motif d'archivage <span class="text-red-600">*</span>
                </label>
                <textarea @bind="archivalReason"
                    class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                    rows="4"
                    placeholder="Expliquez pourquoi vous archivez ce client..."></textarea>
            </div>

            <div class="flex justify-end gap-3">
                <button @onclick="CloseDeleteModal" class="px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400 transition font-medium">
                    Annuler
                </button>
                <button @onclick="ConfirmArchive"
                    disabled="@string.IsNullOrWhiteSpace(archivalReason)"
                    class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition font-medium disabled:opacity-50 disabled:cursor-not-allowed">
                    Confirmer l'archivage
                </button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public Guid ClientId { get; set; }

    private Client? client;
    private bool isLoading = true;
    private string errorMessage = string.Empty;
    private bool showDeleteModal = false;
    private string archivalReason = string.Empty;
    private string activeTab = "general";

    protected override async Task OnInitializedAsync()
    {
        await LoadClient();
    }

    private async Task LoadClient()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;
            client = await ApiService.GetClientAsync(ClientId);

            if (client == null)
            {
                errorMessage = "Client non trouv√©";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erreur de chargement: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/admin-lc/clients");
    }

    private void EditClient()
    {
        Navigation.NavigateTo($"/admin-lc/clients/{ClientId}/edit");
    }

    private void ShowDeleteConfirmation()
    {
        showDeleteModal = true;
        archivalReason = string.Empty;
    }

    private void CloseDeleteModal()
    {
        showDeleteModal = false;
        archivalReason = string.Empty;
    }

    private async Task ConfirmArchive()
    {
        if (client == null || string.IsNullOrWhiteSpace(archivalReason))
        {
            return;
        }

        try
        {
            // Mettre √† jour le client avec les informations d'archivage
            client.IsArchived = true;
            client.ArchivedAt = DateTime.Now;
            client.ArchivalReason = archivalReason;

            // Envoyer la mise √† jour √† l'API
            var success = await ApiService.UpdateClientAsync(ClientId, client);

            if (success)
            {
                CloseDeleteModal();
                await Task.Delay(500);
                Navigation.NavigateTo("/admin-lc/clients");
            }
            else
            {
                errorMessage = "Erreur lors de l'archivage du client";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erreur: {ex.Message}";
        }
    }

    private async Task RestoreClient()
    {
        if (client == null)
        {
            return;
        }

        try
        {
            // Restaurer le client
            client.IsArchived = false;
            client.ArchivedAt = null;
            client.ArchivalReason = null;

            // Envoyer la mise √† jour √† l'API
            var success = await ApiService.UpdateClientAsync(ClientId, client);

            if (success)
            {
                await LoadClient();
            }
            else
            {
                errorMessage = "Erreur lors de la restauration du client";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erreur: {ex.Message}";
        }
    }
}
