@page "/login"
@using LaborControl.Web.Services
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="min-h-screen flex items-center justify-center bg-gray-100">
    <div class="bg-white p-8 rounded-lg shadow-md w-96">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-bold">LABOR CONTROL</h1>
            <a href="/" class="text-blue-600 hover:text-blue-800 text-sm">← Accueil</a>
        </div>
        
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
                @errorMessage
            </div>
        }

        <div class="mb-4">
            <label class="block text-gray-700 mb-2">Email ou Pseudo</label>
            <input type="email" @bind="email" class="w-full px-3 py-2 border rounded" placeholder="Ex: admin@entreprise.fr ou jdupont" autocomplete="email" />
            <p class="text-xs text-gray-500 mt-1">Utilisez votre email (admin) ou votre pseudo (employés)</p>
        </div>

        <div class="mb-6">
            <label class="block text-gray-700 mb-2">Mot de passe</label>
            <div class="relative">
                <input type="@(showPassword ? "text" : "password")"
                       @bind="password"
                       class="w-full px-3 py-2 pr-10 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500" />
                <button type="button"
                        @onclick="TogglePasswordVisibility"
                        class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600">
                    @if (showPassword)
                    {
                        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"></path>
                        </svg>
                    }
                    else
                    {
                        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                        </svg>
                    }
                </button>
            </div>
        </div>

        <button @onclick="HandleLogin" disabled="@isLoading" 
                class="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 disabled:bg-gray-400">
            @if (isLoading)
            {
                <span>Connexion...</span>
            }
            else
            {
                <span>Se connecter</span>
            }
        </button>
        
        <div class="mt-4 text-center">
            <a href="/" class="text-gray-600 hover:text-blue-600 text-sm">Retour à l'accueil du site</a>
        </div>
    </div>
</div>

@code {
    private string email = "";
    private string password = "";
    private string errorMessage = "";
    private bool isLoading = false;
    private bool showPassword = false;

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private async Task HandleLogin()
    {
        errorMessage = "";
        isLoading = true;

        try
        {
            var (success, requiresPasswordChange, userId) = await AuthService.LoginAsync(email, password);
            if (success)
            {
                // Si l'utilisateur doit changer son mot de passe, rediriger vers la page de changement
                if (requiresPasswordChange)
                {
                    Navigation.NavigateTo($"/change-password?userId={userId}");
                }
                else
                {
                    Navigation.NavigateTo("/dashboard");
                }
            }
            else
            {
                errorMessage = "Identifiant ou mot de passe incorrect";
            }
        }
        catch (Exception)
        {
            errorMessage = "Erreur de connexion au serveur";
        }
        finally
        {
            isLoading = false;
        }
    }
}
